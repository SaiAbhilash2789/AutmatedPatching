Code -1 :

import os
import json
import logging
from urllib.request import Request, urlopen

SLACK_WEBHOOK_URL = os.environ['SLACK_WEBHOOK_URL']
SLACK_CHANNEL = os.environ['SLACK_CHANNEL']

logger = logging.getLogger()
logger.setLevel(logging.INFO)

def generate_new_message(old_message, approved_option_value):
    # Copy the original message and modify the attachments based on the approval decision
    new_message = old_message.copy()
    new_attachments = []

    for attachment in old_message['attachments']:
        # Check if the value of the "APPROVE" button matches the approved_option_value
        if 'actions' in attachment and len(attachment['actions']) > 0:
            approve_button = attachment['actions'][0]
            if 'name' in approve_button and approve_button['name'] == 'approval_decision' and approve_button['value'] == approved_option_value:
                # If the option is approved, show it in the new message
                new_attachments.append(attachment)
            else:
                # If the option is not approved, gray it out and show it in the new message
                grayed_out_attachment = attachment.copy()
                grayed_out_attachment['actions'][0]['style'] = 'danger'
                new_attachments.append(grayed_out_attachment)

    new_message['attachments'] = new_attachments
    return new_message

def process_user_response(payload, slack_message):
    if 'actions' in payload and len(payload['actions']) > 0:
        approval_decision = payload['actions'][0]['value']
        if approval_decision.startswith('i-'):
            return generate_new_message(slack_message, approval_decision)
    return slack_message

def lambda_handler(event, context):
    print("Received event: " + json.dumps(event, indent=2))

    # Send Slack message with multiple approval buttons and one deny button
    slack_message = {
        "channel": SLACK_CHANNEL,
        "text": "EC2 Instance is scheduled for Patching",
        "attachments": [
            {
                "text": "Click on the preferred action below:",
                "fallback": "Click on the preferred action below:",
                "callback_id": "ec2_removal_approval_option_1",
                "color": "#3AA3E3",
                "attachment_type": "default",
                "actions": [
                    {
                        "name": "approval_decision",
                        "text": "APPROVE Option 1",
                        "style": "primary",
                        "type": "button",
                        "value": "i-06512ccc545806a49",
                        "confirm": {
                            "title": "Are you sure?",
                            "text": "Instance i-09db3ec6cdb1c6449 will be unavailable for some time until the patching gets completed",
                            "ok_text": "Yes",
                            "dismiss_text": "No"
                        }
                    },
                    {
                        "name": "approval_decision",
                        "text": "DENY Option 1",
                        "style": "danger",
                        "type": "button",
                        "value": "DENY"
                    }
                ]
            },
            {
                "text": "Click on the preferred action below:",
                "fallback": "Click on the preferred action below:",
                "callback_id": "ec2_removal_approval_option_2",
                "color": "#3AA3E3",
                "attachment_type": "default",
                "actions": [
                    {
                        "name": "approval_decision",
                        "text": "APPROVE Option 2",
                        "style": "primary",
                        "type": "button",
                        "value": "i-09db3ec6cdb1c6446",
                        "confirm": {
                            "title": "Are you sure?",
                            "text": "Instance i-09db3ec6cdb1c6446 will be unavailable for some time until the patching gets completed",
                            "ok_text": "Yes",
                            "dismiss_text": "No"
                        }
                    },
                    {
                        "name": "approval_decision",
                        "text": "DENY Option 2",
                        "style": "danger",
                        "type": "button",
                        "value": "DENY"
                    }
                ]
            },
            {
                "text": "Click on the preferred action below:",
                "fallback": "Click on the preferred action below:",
                "callback_id": "ec2_removal_approval_option_3",
                "color": "#3AA3E3",
                "attachment_type": "default",
                "actions": [
                    {
                        "name": "approval_decision",
                        "text": "APPROVE Option 3",
                        "style": "primary",
                        "type": "button",
                        "value": "i-0afed6cbe7c0b5bd3",
                        "confirm": {
                            "title": "Are you sure?",
                            "text": "Instance i-0afed6cbe7c0b5bd3 will be unavailable for some time until the patching gets completed",
                            "ok_text": "Yes",
                            "dismiss_text": "No"
                        }
                    },
                    {
                        "name": "approval_decision",
                        "text": "DENY Option 3",
                        "style": "danger",
                        "type": "button",
                        "value": "DENY"
                    }
                ]
            }
        ]
    }

    # Simulated payload for testing the user's response for Option 1 (approve Option 1)
    sample_payload_option_1 = {
        "actions": [
            {
                "name": "approval_decision",
                "value": "i-06512ccc545806a49"
            }
        ]
    }

    # Simulated payload for testing the user's response for Option 2 (approve Option 2)
    sample_payload_option_2 = {
        "actions": [
            {
                "name": "approval_decision",
                "value": "i-09db3ec6cdb1c6446"
            }
        ]
    }

    # Simulated payload for testing the user's response for Option 3 (approve Option 3)
    sample_payload_option_3 = {
        "actions": [
            {
                "name": "approval_decision",
                "value": "i-0afed6cbe7c0b5bd3"
            }
        ]
    }

    # Process user responses for Option 1, Option 2, and Option 3, and send the updated messages to Slack
    slack_message = process_user_response(sample_payload_option_1, slack_message)
    req = Request(SLACK_WEBHOOK_URL, json.dumps(slack_message).encode('utf-8'))
    response = urlopen(req)
    response.read()

    slack_message = process_user_response(sample_payload_option_2, slack_message)
    req = Request(SLACK_WEBHOOK_URL, json.dumps(slack_message).encode('utf-8'))
    response = urlopen(req)
    response.read()

    slack_message = process_user_response(sample_payload_option_3, slack_message)
    req = Request(SLACK_WEBHOOK_URL, json.dumps(slack_message).encode('utf-8'))
    response = urlopen(req)
    response.read()

    return None
